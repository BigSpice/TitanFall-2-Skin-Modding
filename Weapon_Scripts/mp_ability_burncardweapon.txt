WeaponData
{
	// General
	// General
	"printname"   									"BURNCARD_DEBUG"
	"shortprintname"   								"BURNCARD_DEBUG"
	"description" 									"BURNCARD_DEBUG"
	"longdesc"										"BURNCARD_DEBUG"

	"menu_icon"										"rui/hud/earn_meter/burncard_icon"
	"hud_icon"										"rui/hud/earn_meter/burncard_icon"
	"readymessage"              "BUG IT"
	"readyhint"                 "BUG IT"

	"weaponClass" 									"human"
	"fire_mode"   									"offhand"
	"offhand_default_inventory_slot"				"4"
	//"offhand_interupts_weapon_anims"				"1"

	"instant_swap_to"								"1"

	//"OnWeaponPrimaryAttack"							"OnWeaponPrimaryAttack_burncardweapon"
	"OnWeaponAttemptOffhandSwitch"                  "OnWeaponAttemptOffhandSwitch_burncardweapon"
	"OnWeaponPrimaryAttackAnimEvent"				"OnWeaponPrimaryAttackAnimEvent_burncardweapon"
	"OnWeaponActivate"								"OnWeaponActivate_burncardweapon"
	"OnWeaponDeactivate"							"OnWeaponDeactivate_burncardweapon"

	// Models
	"viewmodel"   									"models/weapons/burn_card/ptpov_burn_card.mdl"
	//"viewmodel"   								"models/weapons/empty_handed/ptpov_phaseshift_device.mdl"
	"playermodel"									"models/weapons/empty_handed/w_empty_handed_human.mdl"
	"leveled_pickup"								"1"
	"dev_menu_type"									"offhand" // fire_mode isn't readable from script
	"offhand_keep_primary_in_hand"					"1"

	// Sounds

	"zoom_effects"									"0"

	// Ammo

	// Regen Ammo
	"regen_ammo_refill_start_delay"					"0.0"

	"ammo_suck_behavior"							"offhand_weapons"

	// Damage
	"damage_type" 									"none"
	"explosion_damage_heavy_armor"					"0"
	"damage_near_distance"							"0"
	"damage_far_distance" 							"0"
	"damage_near_value"   							"0"
	"damage_far_value"								"0"

	// Rumble
	"rumble"  										"-1"

	// Behavior
	"fire_rate"   									"1000.0"
	"fire_anim_rate"								"0.65"
	"holster_time"									"0.15"
	"deploy_time" 									"0.25"
	"lower_time"  									"0.25"
	"raise_time"  									"0.5"
	"allow_empty_fire"								"0"
	"reload_enabled"								"0"
	"empty_reload_only"   							"0"
	"allow_empty_click"   							"0"
	"trigger_snipercam"   							"0"
	"allow_headshots" 								"0"
	"breaks_cloak"									"0"
	"primary_fire_does_not_block_sprint"			"1"
	"aimassist_disable_hipfire"						"1"
	"aimassist_disable_ads"							"1"
	"cooldown_type"									"ammo_instant"

	MP_BASE
	{
		"ammo_clip_size"   								"1"
		"ammo_default_total"							"1"
		"ammo_display"									"bar"
		"ammo_min_to_fire"								"1"
		"ammo_per_shot"									"1"
		"ammo_stockpile_max"							"1"
		"fire_duration"									"0.9"
		"regen_ammo_refill_rate"						"0"

		"enable_highlight_networking_on_creation"		"<KEEP_DEFAULT>"
	}

	SP_BASE
	{
		"ammo_clip_size"   								"200"
		"ammo_default_total"							"200"
		"ammo_display"									"bar"
		"ammo_min_to_fire"								"200"
		"ammo_per_shot"									"200"
		"ammo_stockpile_max"							"200"
		"fire_duration"									"3"
		"regen_ammo_refill_rate"						"10"

		"enable_highlight_networking_on_creation"		"1"
	}

	// Crosshair

	Mods
		{
			burn_card_weapon_mod
			{

			}

			burnmeter_amped_weapons
			{
				"hud_icon"				    "rui/menu/boosts/boost_icon_amped"
				"readymessage"              "#HUD_BURNMETER_READY_AMPED_WEAPONS"
				"readyhint"                 "#HUD_BURNMETER_READY_AMPED_WEAPONS_HINT"
			}
			burnmeter_doublexp
			{
				"hud_icon"				    "ui/temp"
				"readymessage"              "AMOP WEEPONS"
				"readyhint"                 "PRES IT!"
			}
			burnmeter_random_foil
			{
				"hud_icon"				    "ui/temp"
				"readymessage"              "AMOP WEEPONS"
				"readyhint"                 "PRES IT!"
			}
			burnmeter_phase_rewind
			{
				"hud_icon"				    "rui/menu/boosts/boost_icon_phase_rewind"
				"readymessage"              "#HUD_BURNMETER_READY_PHASE_REWIND"
				"readyhint"                 "#HUD_BURNMETER_READY_PHASE_REWIND_HINT"
			}
			burnmeter_ap_turret_weapon
			{
				"hud_icon"				    "ui/temp"
				"readymessage"              "#HUD_BURNMETER_READY_AP_TURRET"
				"readyhint"                 "#HUD_BURNMETER_READY_AP_TURRET_HINT"
			}
			burnmeter_at_turret_weapon
			{
				"hud_icon"				    "ui/temp"
				"readymessage"              "#HUD_BURNMETER_READY_AT_TURRET"
				"readyhint"                 "#HUD_BURNMETER_READY_AT_TURRET_HINT"
			}

			burnmeter_maphack
			{
				"hud_icon"				    "rui/menu/boosts/boost_icon_map_hack"
				"readymessage"              "#HUD_BURNMETER_READY_MAP_HACK"
				"readyhint"                 "#HUD_BURNMETER_READY_MAP_HACK_HINT"
			}

			burnmeter_emergency_battery
			{
				"hud_icon"				    "rui/menu/boosts/boost_icon_battery"
				"readymessage"              "#HUD_BURNMETER_READY_EMERGENCY_BATTERY"
				"readyhint"                 "#HUD_BURNMETER_READY_EMERGENCY_BATTERY_HINT"
			}

			burnmeter_smart_pistol
			{
				"hud_icon"				    "rui/menu/boosts/boost_icon_smart_pistol"
				"readymessage"              "#HUD_BURNMETER_READY_SMART_PISTOL"
				"readyhint"                 "#HUD_BURNMETER_READY_SMART_PISTOL_HINT"
			}

			burnmeter_radar_jammer
			{
				"hud_icon"				    "rui/menu/boosts/boost_icon_radar_jam"
				"readymessage"              "#HUD_BURNMETER_READY_RADAR_JAMMER"
				"readyhint"                 "#HUD_BURNMETER_READY_RADAR_JAMMER_HINT"
			}

			burnmeter_nuke_titan
            {
                "hud_icon"				    "rui/menu/boosts/boost_icon_nuke"
                "readymessage"              "#HUD_BURNMETER_READY_NUKE_TITAN"
                "readyhint"                 "#HUD_BURNMETER_READY_NUKE_TITAN_DESC"
            }

            burnmeter_harvester_shield
            {
                "hud_icon"				    "rui/menu/boosts/boost_icon_harvester_shield"
                "readymessage"              "#BURNMETER_HARVESTER_SHIELD"
                "readyhint"                 "#BURNMETER_HARVESTER_SHIELD_HINT"
            }

            burnmeter_rodeo_grenade
            {
                "hud_icon"				    "rui/menu/boosts/boost_icon_core_overload"
                "readymessage"              "#HUD_BURNMETER_READY_SUPER_RODEO"
                "readyhint"                 "#HUD_BURNMETER_READY_SUPER_RODEO_DESC"
            }
		}

	RUI_CrosshairData
	{
		DefaultArgs
		{
			crosshairMovementX          crosshair_movement_x
		    crosshairMovementY          crosshair_movement_y
		}
	}
}